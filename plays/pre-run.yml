---

- name: pre-run
  dci_job:
    id: "{{ job_id }}"
    status: "pre-run"
  tags: [dci]

# Prepare host
- name: "Configure DCI jumphost"
  include_tasks: configure.yml

- name: Lookup ocp component from previous job
  block:

    - name: Lookup components from previous job
      dci_job:
        id: "{{ dci_previous_job_id }}"
        embed: "components"
      register: prev_job
      tags: [dci]

    - name: get ocp component from previous job
      set_fact:
        ocp_component_id: "{{ item.id }}"
      when: "item.type == 'ocp'"
      loop: "{{ prev_job.job.components }}"
      tags: [dci]

  when:
    - dci_previous_job_id is defined
    - dci_previous_job_id|length

- name: Lookup ocp component from oc version
  block:

    - name: Find the corresponding ocp components
      dci_component:
        name: "{{ ocp_version_full }}"
        topic_id: "{{ job_info['job']['topic_id'] }}"
        type: ocp
        state: search
      register: ocp_components
      tags: [dci]
      ignore_errors: true

    - name: get ocp component from previous job
      set_fact:
        ocp_component_id: "{{ ocp_components.components[0].id }}"
      when:
        - "ocp_components is defined"
        - "'components' in ocp_components"
        - "ocp_components.components|length == 1"
        - "'id' in ocp_components.components[0]"
      tags: [dci]

  when: "ocp_component_id is not defined"

- name: Display ocp_component_id
  debug:
    msg: "{{ ocp_component_id }}"
  when: "ocp_component_id is defined"

- name: Attach ocp component to the job
  dci_job_component:
    job_id: "{{ job_id }}"
    component_id: "{{ ocp_component_id }}"
  when:
    - "ocp_component_id is defined"
  tags: [dci]

- include_tasks: track_git_repo.yml
  with_items:
    - "{{ dci_gits_to_components }}"
    - "{{ dev_gits_to_components }}"

- name: Gather the package facts
  package_facts:
    manager: auto

- include_tasks: track_rpm.yml
  with_items: "{{ dci_rpms_to_components }}"

- name: Mirror must-gather images for offline mode
  command:
    cmd: >
      skopeo copy --remove-signatures --all --authfile {{ all_registries_creds }}
      --dest-tls-verify=false docker://{{ item }}
      docker://{{ provisionhost_registry }}/{{ item | regex_replace('^[^/]*/', '') }}
  register: skopeo_copy
  retries: 5
  delay: 5
  until:
    - skopeo_copy is not failed
  loop: "{{ dci_must_gather_images | default(['registry.redhat.io/openshift4/ose-must-gather']) }}"
  when:
    - dci_disconnected | default(false) | bool
    - provisionhost_registry|length
    - all_registries_creds|length

- name: "Copy helm to /usr/local/bin/"
  get_url:
    url: "https://mirror.openshift.com/pub/openshift-v4/clients/helm/latest/helm-linux-amd64"
    dest: "/usr/local/bin/helm"
    mode: u=rwx,g=rx,o=rx
  become: true
  when: do_chart_verifier|bool

- name: Preflight tests
  include_role:
    name: preflight
    tasks_from: pre-run.yml
  when: preflight_operators_to_check is defined
...

---

# Step 0a : set kubeconfig_path, OCP version vars and dci_topic. Check hooks
- name: "Execute kubeconfig step"
  hosts: jumphost
  tags:
    - kubeconfig
  tasks:
    - block:
        - name: Check kubeconfig
          include_tasks: 'plays/check_kubeconfig.yml'

        # Check prerequisite
        - name: "Check prerequisite"
          include_tasks: 'plays/check_prerequisite.yml'

      rescue: &error_with_upload_logs
        - name: "Execute the error process"
          include_tasks: plays/error.yml

# Step 0b : initial step
- name: "Execute initial step"
  hosts: jumphost
  gather_facts: false
  tags:
    - job
    - dci
  tasks:
    - name: Read credentials from env vars
      set_fact:
        dci_client_id="{{ lookup('env','DCI_CLIENT_ID') }}"
        dci_api_secret="{{ lookup('env','DCI_API_SECRET') }}"
        dci_cs_url="{{ lookup('env','DCI_CS_URL') }}"
      no_log: true

    # Schedule a new job only if not passed via pipeline
    - name: "Schedule a new job"
      dci_job:
        components: "{{ dci_components }}"
        components_by_query: "{{ dci_components_by_query }}"
        topic: "{{ dci_topic }}"
        comment: "{{ dci_comment | default('') }}"
        url: "{{ dci_url | default('') }}"
        name: "{{ dci_name | default('') }}"
        configuration: "{{ dci_configuration | default('') }}"
      register: job_info
      when: job_info is not defined

    - name: Set job id
      set_fact:
        job_id: "{{ job_info.job.id }}"

    - name: Set job state - new
      dci_job:
        id: "{{ job_id }}"
        status: "new"

    - name: 'Set DCI tags for the current job'
      dci_job:
        id: '{{ job_id }}'
        tags: '{{ dci_tags }}'
      when: dci_tags[0] is defined

# Step 1a : Red Hat "pre-run" step
- name: "Execute Red Hat pre-run step"
  hosts: jumphost
  tags:
    - pre-run
    - redhat-pre-run
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - block:
        - name: "Execute pre-run"
          include_tasks: 'plays/pre-run.yml'

      rescue: *error_with_upload_logs

# Step 1b : Hook "pre-run" step
- name: "Execute hooks' pre-run step"
  hosts: jumphost
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tags:
    - pre-run
    - partner-pre-run
  tasks:
    - block:
        - name: Run the pre-run hook
          include_tasks: '{{ dci_config_dir }}/hooks/pre-run.yml'
          when: check_pre_run.stat.exists

      rescue: *error_with_upload_logs

# Step 2 : "running" step
- name: "Execute install step"
  hosts: jumphost
  tags:
    - install
    - running
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - block:
        - name: Set job state - running
          dci_job:
            id: "{{ job_id }}"
            status: "running"
          tags: [dci]

        - name: "Execute install"
          include_tasks: "{{ dci_config_dir }}/hooks/install.yml"

      rescue: &failure_with_upload_logs
        - name: "Execute the failure process"
          include_tasks: plays/failure.yml

# Step 3 : "testing" step
- name: "Execute Red Hat tests step"
  hosts: jumphost
  tags:
    - running
    - testing
    - redhat-testing
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - block:
        - name: "Execute Red Hat tests"
          include_tasks: plays/tests.yml

      rescue: *failure_with_upload_logs

# Step 3b : "testing" step
- name: "Execute partner tests step"
  hosts: jumphost
  tags:
    - running
    - testing
    - partner-testing
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - block:
        - name: "Execute tests hook"
          include_tasks: "{{ dci_config_dir }}/hooks/tests.yml"
          when: check_tests.stat.exists

      rescue: *failure_with_upload_logs

# Step 4 : "post-run" step
- name: "Execute post-run step"
  hosts: jumphost
  tags:
    - post-run
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - block:
        - name: "Run post-run"
          include_tasks: plays/post-run.yml

        - name: Run the post-run hook
          include_tasks: '{{ dci_config_dir }}/hooks/post-run.yml'
          when: check_post_run.stat.exists

      rescue: *error_with_upload_logs

# Step 5: "Final step (success)"
- name: "Success"
  hosts: jumphost
  tags:
    - success
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - name: "Execute the teardown process"
      include_tasks: "{{ dci_config_dir }}/hooks/teardown.yml"
      when:
        - dci_teardown_on_success|default(true)|bool
        - check_teardown.stat.exists

    - name: success
      dci_job:
        id: "{{ job_id }}"
        status: "success"
      tags: [dci]

    - name: "Final step"
      debug:
        msg: "The job is now finished. Review the log at: https://www.distributed-ci.io/jobs/{{ job_info.job.id }}/jobStates"
      tags: [dci]

...
